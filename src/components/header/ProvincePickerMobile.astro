---
import { getLangFromUrl, useTranslations } from '../../i18n/utils'
import jurisdictions from '../../lib/jurisdictions.json'

const lang = getLangFromUrl(Astro.url)
const locale = lang === 'fr' ? 'fr-CA' : 'en-CA'
const t = useTranslations(lang)
---

<a
  class='nav-link dropdown-toggle'
  id='navbarDropdown-2'
  href='#'
  role='button'
  data-toggle='dropdown'
  aria-haspopup='true'
  aria-expanded='false'>{t('select')}</a
>
<div class='dropdown-menu province' aria-labelledby='navbarDropdown-2'>
  {
    jurisdictions.jurisdictions[locale].map((j) => {
      return (
        <a class='dropdown-item' href='#' data-province={j.code}>
          {j.title}
        </a>
      )
    })
  }
</div>

<script>
  import { runPostHandlerCallbacks } from '../../lib/provinceChangeHandler.js'

  try {
    const provinceList = document.querySelector(
      '#navbarDropdown-2 + .dropdown-menu'
    ) as HTMLElement

    const provinceSelect = document.getElementById('navbarDropdown-2')

    // Function to set the province from local storage
    function initializeProvince() {
      const storedProvinceCode = JSON.parse(
        localStorage.getItem('province') || 'null'
      )
      if (storedProvinceCode && provinceList && provinceSelect) {
        const menuItems = document.querySelectorAll(
          '.dropdown-item[data-province]'
        )
        menuItems.forEach(function (item) {
          const itemProvince = item.getAttribute('data-province')
          if (itemProvince === '' || itemProvince === storedProvinceCode) {
            item.classList.add('is-active')
          } else {
            item.classList.remove('is-active')
          }
        })
      }
    }

    if (provinceList) {
      provinceList.addEventListener('click', function (e) {
        e.preventDefault()
        const provinceCode = (e.target as HTMLElement)?.getAttribute(
          'data-province'
        )

        const menuItems = document.querySelectorAll(
          '.dropdown-item[data-province]'
        )

        menuItems.forEach(function (item) {
          const itemProvince = item.getAttribute('data-province')
          if (itemProvince === '' || itemProvince === provinceCode) {
            item.classList.add('is-active')
          } else {
            item.classList.remove('is-active')
          }
        })

        localStorage.setItem('province', JSON.stringify(provinceCode))

        // Run post-handler callbacks
        runPostHandlerCallbacks()
      })
      // Initialize province on page load
      initializeProvince()
    }
  } catch (error) {
    console.log(error)
  }
</script>
