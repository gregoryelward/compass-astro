---
import { getLangFromUrl, useTranslations } from '../../i18n/utils'
import jurisdictions from '../../lib/jurisdictions.json'

const lang = getLangFromUrl(Astro.url)
const locale = lang === 'fr' ? 'fr-CA' : 'en-CA'
const t = useTranslations(lang)
---

<button
  class='dropdown-toggle js--sub-menu-trigger sub-menu-trigger'
  id='navbarDropdown2'
  aria-haspopup='true'
  aria-expanded='false'
  data-toggle='dropdown'
>
  {t(`select`)}
</button>
<ul class='dropdown-menu benefits' aria-labelledby='navbarDropdown2'>
  {
    jurisdictions.jurisdictions[locale].map((j) => {
      return (
        <li>
          <a class='js--sub-link' href='#' data-province={j.code}>
            {j.title}
          </a>
        </li>
      )
    })
  }
</ul>

<script >

import { addPostHandlerListener, runPostHandlerCallbacks } from '../../lib/provinceChangeHandler.js';

try {

const provinceList = document.querySelector(
      '#navbarDropdown2 + ul.dropdown-menu'
    ) as HTMLElement

    const provinceSelect = document.getElementById('navbarDropdown2')

      // Function to set the province from local storage
      function initializeProvince() {
      const storedProvinceCode = JSON.parse(localStorage.getItem('province') || 'null');
      if (storedProvinceCode && provinceList && provinceSelect) {
        const matchingLink = provinceList.querySelector(`li a[data-province="${storedProvinceCode}"]`);

        if (matchingLink) {
          const provinceName = matchingLink.textContent?.trim();

          // Set the active class on the matching link
          provinceList.querySelectorAll('li a').forEach((a) => {
            if (a.getAttribute('data-province') === storedProvinceCode) {
              a.classList.add('is-active');
            } else {
              a.classList.remove('is-active');
            }
          });

          // Update the dropdown button label
          if (provinceSelect && provinceName) 
             provinceSelect.textContent = provinceName;
          }
        }
      }
  

if (provinceList) {
  provinceList .addEventListener('click', function (event) {
      console.log('provinceList province picker called',event.target)
      event.preventDefault()
      const closest = (event.target as HTMLElement)?.closest('.js--sub-link');
      // const targetElement = event.target
      // //@ts-ignore
      // const closest = targetElement?.closest('.js--sub-link')
      if (closest) {
        const provinceCode = closest.getAttribute('data-province');
        const provinceName = closest.textContent?.trim();

        provinceList.querySelectorAll('li a').forEach((a) => {
          if (a.getAttribute('data-province') === provinceCode) {
            a.classList.add('is-active')
          } else {
            a.classList.remove('is-active')
          }
        })

        

        if (provinceSelect && provinceName) {
          // console.log('Updating button label to:', provinceName);
          provinceSelect.textContent = provinceName; // Change button text
          localStorage.setItem('province', JSON.stringify(provinceCode)); // Save selected province
        } else {
          console.error('Failed to update button label');
        }

        // console.log('provinceSelect ',provinceSelect, provinceName)
        // // provinceSelect?.innerText  = provinceName
        // // provinceSelect?.textContent = provinceName
        // localStorage.setItem('province', JSON.stringify(provinceCode))


        // Run post-handler callbacks
        console.log('MAIN PICKER CALLING CALLBACK')
        runPostHandlerCallbacks();
      }
    })
    // Initialize province on page load
    initializeProvince();
}
} catch(error) { console.log(error)}

</script>
<!-- <script>
  import jurisdictions from '../../lib/jurisdictions.json'

  const provinceSelect = document.getElementById('navbarDropdown2')

  if (provinceSelect) {
    const provinceList = document.querySelector(
      '#navbarDropdown2 + ul.dropdown-menu'
    ) as HTMLElement

    provinceList.addEventListener('click', function (event) {
      console.log('provinceList province picker called')
      event.preventDefault()
      const targetElement = event.target
      //@ts-ignore
      const closest = targetElement?.closest('.js--sub-link')
      if (closest) {
        const provinceCode = closest.getAttribute('data-province')
        const provinceName = closest.text

        provinceList.querySelectorAll('li a').forEach((a) => {
          if (a.getAttribute('data-province') === provinceCode) {
            a.classList.add('is-active')
          } else {
            a.classList.remove('is-active')
          }
        })

        provinceSelect.textContent = provinceName
        localStorage.setItem('province', JSON.stringify(provinceCode))
      }
    })
  }

  // set dropdown to show current province
  if (provinceSelect) {
    try {
   
      const provinceCode = JSON.parse(localStorage.getItem('province'))

      if (provinceCode) {
        const language =
          document.getElementsByTagName('html')[0].getAttribute('lang') ||
          'en-CA'
       
      
        provinceSelect.textContent = jurisdictions.jurisdictions[language].find(
          (j: { code: any }) => j.code === provinceCode
        ).title

        document
          .querySelectorAll('#navbarDropdown2 + ul.dropdown-menu li a')
          .forEach((a) => {
            if (a.getAttribute('data-province') === provinceCode) {
              a.classList.add('is-active')
              return
            }
          })
      }

      
    } catch (error) {
      console.log('Error', error)
    }
  }
</script> -->
