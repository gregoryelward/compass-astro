---
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import makeUrl from '../lib/helpers'
import type { TypeResourcesSkeleton } from '../types/contentful/TypeResources'
import type { Asset, Entry } from 'contentful'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const locale = lang === 'fr' ? 'fr-CA' : 'en-CA'

interface Props {
  resources: Array<Entry<TypeResourcesSkeleton>>
}

const { resources } = Astro.props as Props

const base = import.meta.env.BASE_URL
---

{
  resources && resources.length > 0 ? (
    <div class='bg-secondary resources'>
      <div class='container'>
        <section class='section'>
          <div class='row justify-content-md-center'>
            <div class='col-12'>
              <h2>{t('resources')}</h2>
              <div class='mb-4 pb-2' />
              <div class='row'>
                {resources.map((r) => {
                  const { title, lead, slug, cardImage } = r.fields
                  return (
                    <div class='col-12 col-md-4'>
                      <div class='pro-card--full-img equal-height'>
                        <picture>
                          <img
                            alt=''
                            src={
                              (r.fields?.cardImage as Asset)?.fields?.file
                                ?.url as string
                            }
                          />
                        </picture>
                        <div class='content'>
                          <a
                            href={`${makeUrl(base, locale, 'resource', slug as string)}`}
                          >
                            <p>{title}</p>
                            <p class='xsmall'>{lead}</p>
                            <span class='btn-link'>
                              <span />
                            </span>
                          </a>
                        </div>
                      </div>
                    </div>
                  )
                })}
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>
  ) : null
}
