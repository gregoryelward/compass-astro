---
import { marked } from 'marked'
import { gfmHeadingId } from 'marked-gfm-heading-id'
import Layout from '../layouts/Layout.astro'
import { contentfulClient } from '../lib/contentful'
import type { Entry } from 'contentful'
import type { TypePageSkeleton } from '../types/contentful/TypePage'
import type { TypeBenefitSkeleton } from '../types/contentful/TypeBenefit'
import getJurisdiction from '../lib/jurisdictions'
import BenefitResources from '../components/BenefitResources.astro'
import type { TypeAgencyResourceSkeleton } from '../types/contentful/TypeAgencyResource'

export async function getStaticPaths() {
  let paths = []
  const LOCALES = ['en-CA', 'fr-CA']
  for (const locale of LOCALES) {
    const res = await contentfulClient.getEntries<TypePageSkeleton>({
      content_type: 'page',
      locale
    })
    const benefitRes = await contentfulClient.getEntries<TypeBenefitSkeleton>({
      content_type: 'benefit',
      include: 3,
      //@ts-ignore
      order: 'fields.order',
      locale
    })

    const benefits = benefitRes.items

    const page = res.items

    for (const i of page) {
      // const others = allitems.filter((f) => f.fields.slug !== i.fields.slug)
      // maybe have an attribute basic page
      if (i.fields.slug === 'resources') {
        // move this to howTo content type, removed as a page
        // so far, only disclaimer, all-benefits
        paths.push({
          params: {
            resourcepage: `${locale === 'en-CA' ? i.fields.slug : `fr/${i.fields.slug}`}`
          },
          props: { page: { ...i }, benefits }
        })
      }
    }
  }
  return paths
}

const options = {
  prefix: 'my-prefix-'
}

marked.use(gfmHeadingId(options))

const page = Astro.props.page as Entry<TypePageSkeleton>
const benefits = Astro.props.benefits as Array<Entry<TypeBenefitSkeleton>>
---

<Layout
  title={page?.fields.title as string}
  description={page?.fields.metaDescription as string}
  className='page_resourcesall'
>
  <main
    class={`page ${page?.fields?.slug}`}
    id='maincontent'
    data-page-title={page?.fields.title as string}
    data-page-category=''
  >
    <div class='container block1'>
      <section class='section'>
        <div class='row justify-content-md-center'>
          <div class='col-12 col-md-10'>
            <h1>
              <strong>{page?.fields.title as string}</strong>
            </h1>
            <!-- <h2>{page?.fields.subTitle as string}</h2> -->
            <!-- TO DO List benefit and agency resource - see groupby -->
            <p class='large'>
              {page?.fields.lead as string}
            </p>
            {
              page?.fields?.block1 ? (
                <div set:html={marked(page.fields.block1 as string)} />
              ) : null
            }
          </div>
        </div>
      </section>
    </div>

    <div class='bg-white lt-border-t-light'>
      <div class='container'>
        <section class='section'>
          <div class='row justify-content-md-center'>
            <div class='col-12'>
              <div class='mb-3 pb-2'>
                {
                  benefits
                    ? benefits
                        .filter((b) => b?.fields?.agencyResource)
                        .map((b, index) => {
                          return (
                            <div
                              class={`js-accordion benefit-agency ${b.fields.agencyResource ? '' : 'empty'}`}
                              data-province-filter={
                                getJurisdiction(b.fields.authority)?.code || ''
                              }
                              data-province-hide-filter={
                                b.fields.hideForProvinces || ''
                              }
                            >
                              <h2 id={`benefit${b?.sys?.id}`}>
                                {b?.fields?.title}
                              </h2>
                              <div class='card-body mb-3'>
                                <div class='js-accordion'>
                                  <BenefitResources
                                    resources={
                                      b?.fields.agencyResource as Array<
                                        Entry<TypeAgencyResourceSkeleton>
                                      >
                                    }
                                  />
                                </div>
                              </div>
                            </div>
                          )
                        })
                    : null
                }
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>

    {
      page?.fields?.block2 ? (
        <div class='bg-white lt-border-t-light block2'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div set:html={marked(page.fields.block2 as string)} />
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }
    {
      page?.fields?.block3 ? (
        <div class='bg-secondary block3'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div set:html={marked(page.fields.block3 as string)} />
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }
    {
      page?.fields?.block4 ? (
        <div class='bg-white lt-border-t-light block4'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div set:html={marked(page.fields.block4 as string)} />
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }
  </main>
</Layout>

<script>
  import accordion from '../lib/accordion'
  import showProvincialDataOnly from '../lib/filterContent'

  function hideEmptyAgency() {
    // PREACCORDION
    const agencyList = document.querySelectorAll('.js-accordion.benefit-agency')

    // console.log('agencyList ', agencyList)

    agencyList.forEach(function (agencyItem) {
      const name = agencyItem.querySelectorAll('h2')[0].innerText
      // console.log('Nane ', name)
      const agencyResources = agencyItem.querySelectorAll(
        '.js-accordion > [data-province-filter]'
      )

      var nodes = Array.prototype.slice.call(agencyResources)

      let nodeLength = nodes.filter(function (node) {
        // if (name === 'BENEFIT - Canada Pension Planâ€“Disability benefit - 1') {
        //   console.log('name ', name, `[${node.style.display}]`)
        //   // console.log('agencyResources ', agencyResources)
        // }

        return node.style.display !== 'none'
      }).length

      // console.log('nodeLength ', nodeLength)
      if (nodeLength === 0) {
        // console.log('hide', name)
        ;(agencyItem as HTMLElement).style.display = 'none'
        ;(agencyItem as HTMLElement).style.color = 'red'
      } else {
        // console.log('show', name)
        ;(agencyItem as HTMLElement).style.display = 'block'
        ;(agencyItem as HTMLElement).style.color = 'blue'
      }
    })
  }
  const provinceList = document.querySelector(
    '#navbarDropdown2 + ul.dropdown-menu'
  ) as HTMLElement

  // console.log('attach listener to ', provinceList)
  provinceList.addEventListener('click', function (event) {
    // console.log('provinceList.Listener clicked 2 ')
    event.preventDefault()
    // console.log('in resourcepage calling showProvincialDataOnly()')
    showProvincialDataOnly()

    // console.log('in resourcepage calling hideEmptyAgency()')
    hideEmptyAgency()
  })
  // console.log('in resourcepage calling showProvincialDataOnly()')
  // showProvincialDataOnly()

  // console.log('in resourcepage calling hideEmptyAgency()')
  // hideEmptyAgency()

  accordion('.js-accordion h2', 'H2', 2)
  accordion('.js-accordion h3', 'H3', 3)
</script>

<style>
  .accordion p {
    margin-top: 1rem;
  }
</style>
