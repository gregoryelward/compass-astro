---
import { marked } from 'marked'
import { gfmHeadingId } from 'marked-gfm-heading-id'
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import Layout from '../layouts/Layout.astro'
import { contentfulClient } from '../lib/contentful'
import type { Asset, Entry } from 'contentful'
import type { TypeBenefitSkeleton } from '../types/contentful/TypeBenefit'
import getJurisdiction from '../lib/jurisdictions'
import type { TypeBenefitPageSkeleton } from '../types/contentful/TypeBenefitPage'
import makeUrl from '../lib/helpers'
// import type { TypeAgencyResourceSkeleton } from '../types/contentful/TypeAgencyResource'
import type { TypeAgencySkeleton } from '../types/contentful/TypeAgency'
import Feedback from '../components/Feedback.astro'
import type { TypeStepsSkeleton } from '../types/contentful/TypeSteps'
// import Resources from '../components/Resources.astro'
import type {
TypeAgencyResourceSkeleton,
  // TypeBenefitWarning,
  TypeBenefitWarningSkeleton,
   TypeCtaSkeleton,
TypeExploreMoreBenefitsCalloutFields,
TypeExploreMoreBenefitsCalloutSkeleton

} from '../types/contentful'
import OtherBenefits from '../components/OtherBenefits.astro'
import BenefitResources from '../components/BenefitResources.astro'
// import BenefitAgencyResources from '../components/BenefitAgencyResources.astro'


export async function getStaticPaths() {

//   const inventory = [
//   { name: "asparagus", type: "vegetables", quantity: 5 },
//   { name: "bananas", type: "fruit", quantity: 0 },
//   { name: "goat", type: "meat", quantity: 23 },
//   { name: "cherries", type: "fruit", quantity: 5 },
//   { name: "fish", type: "meat", quantity: 22 },
// ];

  let paths = []
  const LOCALES = ['en-CA', 'fr-CA']
  for (const locale of LOCALES) {
    const benefitRes = await contentfulClient.getEntries<TypeBenefitSkeleton>({
      content_type: 'benefit',
      include:  3,
      locale
    })

    const warningRes =
      await contentfulClient.getEntries<TypeBenefitWarningSkeleton>({
        skip: 0,
        limit: 1,
        content_type: 'benefitWarning',
        locale
      })
    let warning = warningRes.items[0]?.fields



    const benefits = benefitRes.items


    const ctaOtherBenefitsyId = 'vbcbiuCwY8oajVj8Q9x2P';
    const ctaOtherBenefits :Entry<TypeCtaSkeleton>= await contentfulClient.getEntry(ctaOtherBenefitsyId, {
  locale, // Replace with the desired locale
});
    // console.log('Entry:', ctaOtherBenefits );

    const exploreRes =
      await contentfulClient.getEntries<TypeExploreMoreBenefitsCalloutSkeleton>(
        {
          skip: 0,
          limit: 1,
          content_type: 'exploreMoreBenefitsCallout',
          locale
        }
      )
    let exploreSection = exploreRes.items[0]?.fields
    

    // console.log('benefits ', benefits)

    // function myCallback(agencyResource: any) {
    //   //@ts-ignore
    //   // return agencyResource?.agency || "notitle"
    //   // return agencyResource?.agency?.fields?.title || "notitle"
    //   return agencyResource?.title || "notitle"
    // }
    // function myCallback({ quantity } : any) {
    //   return quantity > 5 ? "ok" : "restock";
    // }

    for (const i of benefits) {
      let groupedAgencyResources;
      const jurisdiction = getJurisdiction(i.fields.authority, locale)
      
      let agencyResource = i.fields?.agencyResource?.filter(Boolean).map((a) => {
        // console.log("a?.agency?.fields? ",a?.fields)
        // console.log('a?.fields?.agency ',a?.fields?.agency)
        //@ts-ignore
        return {
          //@ts-ignore
          ...a?.fields,
          //@ts-ignore
          // agency : a?.fields?.agency?.fields?.title
          // agency : a?.fields?.agency as TypeAgencySkeleton
          showLocalyOnly : a?.fields?.agency?.fields?.showLocalyOnly, authority: a?.fields?.agency?.fields?.authority,
           //@ts-ignore
          agency : a?.fields?.agency?.fields?.title 
          // agency : {title: a?.fields?.agency?.fields?.title, showLocalyOnly : a?.fields?.agency?.fields?.showLocalyOnly, authority: a?.fields?.agency?.fields?.authority}

          
        }
      })

    

     
      if (agencyResource) {

        // console.log('agencyResource ',agencyResource)
        // console.log("agencyResource DEGUG ", agencyResource)
        // result2 = Object.groupBy(agencyResource, myCallback);

        // const groupedByAgency = Object.groupBy(agencyResource, (resource) => agencyResource.agency.title);

        groupedAgencyResources = Object.groupBy(agencyResource, (resource) => {
          const title = resource.agency;
          return title || 'Unknown Agency';
        });
        // const groupedByAgency = Object.groupBy(agencyResource, (resource) => {
        //   const title = resource.agency?.title;
        //   return title || 'Unknown Agency';
        // });

        // console.log(groupedByAgency)
        // result2 =groupedByAgency
        //@ts-ignore
        // result2 = Object.groupBy(agencyResource, (resource) => agencyResource.agency?.title || "notitle");
        // console.log(' result2 ', result2)

        // console.log("result2 ", result2?.title, result2?.agency,result2  )
      }

      // const agencyResources = i.fields?.agencyResource?.filter(Boolean)
      const jurisdictionSlug = jurisdiction?.slug
      let path = locale === 'en-CA' ? '' : `/fr`
      if (jurisdictionSlug) {
        path = path + '/' + jurisdictionSlug
      }
      path = path + '/' + i.fields.slug

      // const benefitId = i.sys.id; // Extract the benefit's id

      const benefitPages = i.fields.benefitPages as Array<
        Entry<TypeBenefitPageSkeleton>
      >
      const benefitSteps = i.fields.steps as Array<
        Entry<TypeStepsSkeleton>
      >
      let navigationIndex = 0  
      
      // console.log('benefitPages[2]?.fields.slug ',benefitPages[2]?.fields.slug)
      let applySlug = benefitPages[2]?.fields.slug || "how-to-apply"

      for (const b of benefitPages) {
        // if (b?.fields?.showWarning) {
        //  console.log(b?.fields?.title, b?.fields?.showWarning)
        // }
        // Filter steps that are specific to this benefit
        // const relatedSteps = benefitSteps.filter(step => step.fields.benefitId === i.sys.id);
        paths.push({
          params: {
            benefitpage: path + '/' + b.fields.slug
          },
          props: {
            page: { ...b },
            benefit: { ...i },
            steps: b.fields.slug === "how-to-apply" || b.fields.slug === "apply"  ? benefitSteps : null ,
            navigationIndex,
            ctaOtherBenefits,
            prevPage: benefitPages[navigationIndex - 1],
            nextPage: benefitPages[navigationIndex + 1],
            warning,
            groupedAgencyResources,
            allBenefits: benefits,
            exploreSection,
            applySlug,
            // agencyResources
          }
        })
        navigationIndex = navigationIndex + 1
        
      }
    }
  }
  return paths
}

const options = {
  prefix: 'my-prefix-'
}

marked.use(gfmHeadingId(options))

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const locale = lang === 'fr' ? 'fr-CA' : 'en-CA'

const page = Astro.props.page as Entry<TypeBenefitPageSkeleton>
const benefit = Astro.props.benefit as Entry<TypeBenefitSkeleton>
const steps = Astro.props.steps as Array<Entry<TypeStepsSkeleton>> | null
const warning = Astro.props.warning
const resources = benefit.fields.resources
const navigationIndex = Astro.props.navigationIndex
const prevPage = Astro.props.prevPage
const nextPage = Astro.props.nextPage
const groupedAgencyResources = Astro.props.groupedAgencyResources
const ctaOtherBenefits = Astro.props.ctaOtherBenefits
const allBenefits = Astro.props.allBenefits
const mainCTA = Astro.props.page.fields?.mainCta as Entry<TypeCtaSkeleton> | null
const applySlug = Astro.props.applySlug
// const agencyResources = Astro.props.agencyResources

// console.log('resut ', result2)

// Object.entries(result2).map(([key, value]) => {
//   console.log(`${key} ${JSON.stringify(value)}`); // "a 5", "b 7", "c 9"
 
// });

let agency

if (benefit?.fields?.agency) {
  //@ts-ignore
  agency = benefit?.fields?.agency?.filter(Boolean) as Array<
    Entry<TypeAgencySkeleton>
  >
}
const exploreSection = Astro.props
  .exploreSection as TypeExploreMoreBenefitsCalloutFields

const base = import.meta.env.BASE_URL
---

<Layout
  title={page?.fields?.title as string}
  description={''}
  className='resource'
>
  <main
    class={`page_${page?.fields?.slug}`}
    id='maincontent'
    data-page-title={page?.fields?.title as string}
    data-page-category={page?.fields?.slug}
  >
    <div class='container'>
      <div class='row justify-content-md-center'>
        <div class='col-12 col-md-10'>
          <!-- <p>{JSON.stringify(Object.entries(result2))}</p> -->
          <!-- <p>{Object.entries(result2)}</p> -->

          
          
          <nav aria-label='breadcrumb'>
            <ol class='breadcrumb'>
              <li class='breadcrumb-item'>
                <a class='breadcrumb-item' href={`${makeUrl(base, locale)}`}>
                  {t('home')}
                </a>
              </li>
              <li class='breadcrumb-item'>
                <a
                  class='breadcrumb-item'
                  href={`${makeUrl(
                    base,
                    locale,
                    getJurisdiction(benefit.fields.authority, locale)?.slug,
                    benefit?.fields?.slug as string
                  )}`}
                  >{benefit?.fields?.title}
                </a>
              </li>
              <li class='active breadcrumb-item' aria-current='page'>
                {page?.fields?.title}
              </li>
            </ol>
          </nav>
        </div>
      </div>
    </div>
    <div class='container'>
      <section class='section'>
        <div class='row justify-content-md-center'>
          <div class='col-12 col-md-10'>
            {benefit.fields?.acronym ? <div class='category h6 d-print-none'>
              {benefit.fields.acronym}
            </div>: null}
            <!-- <div class='mb-3 pb-3'></div> -->
            <!-- <pre>{JSON.stringify(benefit)}</pre> -->
            <h1><strong>{page.fields.title}</strong>BENEFIT PAGE</h1>
            {
              page?.fields?.lead ? (
                <p>{page.fields.lead}</p>
              ) : page?.fields?.content1 ? (
                <div class='js-accordion reguirements'>
                  <div set:html={marked(page.fields.content1 as string)} />
                </div>
              ) : null
            }
            <!-- <p>{JSON.stringify(page.fields.mainCta)}</p> -->
         
            {mainCTA  ? <div class="callout callout--no-border p-3 my-4">
              <h2 class="h5">{mainCTA.fields.title}</h2>
              <div
              class=''
              set:html={marked(mainCTA.fields.content as string)}
            />
            </div> : null}
            <!-- {page.fields.mainCta?.fields.title ? <div class="callout callout--no-border p-3 my-4">
              <h2 class="h5">{page.fields.mainCta?.fields.title}</h2>
              <div
              class=''
              set:html={marked(page.fields.mainCta?.fields.content as string)}
            />
            </div> : null} -->
            {
              (page?.fields.slug === applySlug) && page?.fields?.content2 ? (
              
              <h2>{page.fields.content2Title}</h2>
                    <div
                      class=''
                      set:html={marked(page.fields.content2 as string)}
                    />
            
              ) : null
            }

            {
              (page?.fields.slug === applySlug)  && page?.fields?.content3 ? (
              
              <h2>{page.fields.content3Title}</h2>
                    <div
                      class=''
                      set:html={marked(page.fields.content3 as string)}
                    />

              ) : null
            }

          </div>
        </div>
      </section>
    </div>

    <!-- <p>{applySlug}</p> -->
    {
      page?.fields?.lead ? (
        <div class='xbg-white lt-border-t-light under heere'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div class='js-accordion'>
                    <div set:html={marked(page.fields.content1 as string)} />
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }

    <!-- {
      page?.fields.slug === 'apply' ? (
        <div class='xbg-white lt-border-t-light'>
          <div class='container' data-benefit-id='1dPLuwsYC0vnelqpxncb47'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <h2>{t('steps')}</h2>STEPS
                  <div class='mb-3 pb-3' />
                  <ol class='tertiary-blue'>
                    {benefit?.fields?.steps
                      ? //@ts-ignore
                        benefit.fields.steps.map(
                          (s: TypeStepsSkeleton, index: number) => {
                            return (
                              <li>
                                <a
                                  href={`${makeUrl(base, locale,    getJurisdiction(benefit.fields.authority, locale)?.slug,
                    benefit?.fields?.slug as string, 'apply', `step-${index + 1}`)}`}
                                >
                                  {s.fields?.title}  !!
                                </a>
                              </li>
                            )
                          }
                        )
                      : null}
                  </ol>
                  <div class='mb-3 pb-3'>
                    <a
                      href={`${makeUrl(base, locale, 
                        getJurisdiction(benefit.fields.authority, locale)?.slug, 
                        benefit?.fields?.slug as string,'apply', `step-1`)}`}
                      class='a js-step-start-button btn btn-tertiary btn-lg btn-icon-left bi bi-play-fill d-print-none'
                    >
                      {t('startsteppart1')}&nbsp;
                      <strong>{t('startsteppart2')}</strong>
                    </a>
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }  -->

<!-- 
    <BenefitAgencyResources resources={result2}/> -->

    <!-- {
      page?.fields.slug === 'resources' ? (
        <div class='agency resources xbg-white lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div class='mb-3 pb-2'>
                    {
                      agencyResources
                        ? agencyResources
                            .map((b) => {
                              return (
                                <div
                                  class={`js-accordion benefit-agency parent ${b.fields.agencyResource ? '' : 'empty'}`}
                                  data-province-filter={
                                    getJurisdiction(b.fields.authority)?.code || ''
                                  }
                                  data-province-hide-filter={
                                    b.fields.hideForProvinces || ''
                                  }
                                >
                                  <h2 id={`benefit${b?.sys?.id}`}>
                                    {b?.fields?.title}
                                  </h2>
                                  <div class='card-body mb-3'>
                                    <div class='js-accordion child'>
                                    
                                      <BenefitAgencyResources
                                        resources={
                                          b?.fields.agencyResource as Array<
                                            Entry<TypeAgencyResourceSkeleton>
                                          >
                                        }
                                      />
                                    </div>
                                  </div>
                                </div>
                              )
                            })
                        : null
                    }
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    } -->

<!-- VERSION 1 -->

<!-- <div>
  {result2 ? Object.entries(result2).map(([agencyTitle, resources]) => (
    <div  class="agency-group">
      <h2>{agencyTitle}</h2>
      <ul>
        {resources ? resources.map((resource, index) => (
          <li>
            <h3>{resource.title}</h3>
            <p>{resource.content}</p>
          </li>
        )) : null}
      </ul>
    </div>
  )) : null }
</div> -->

{
      page?.fields.slug === 'resources' ? (
        <div class='agency resources xbg-white lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div class='js-accordion resources'>
                    {groupedAgencyResources
                      ? Object.entries(groupedAgencyResources).map(([agencyTitle, resources], index) => {
                          return (
                          <div
                             
                            >
                              <h2 id={`agencyv2-${index}`}>{agencyTitle}</h2>
                             
                              {resources
                                ? //@ts-ignore
                                resources.map(
                                    (
                                      v,
                                      index: number
                                    ) => {
                                      return (
                                      <div
                                        data-province-filter={
                                          v.showLocalyOnly
                                            ? getJurisdiction(v.authority)?.code || ''
                                            : ''
                                        }
                                      >
                                        <h3 id={`agencyv2-resource-${index}`}>{v.title} - {v.authority} - {v.showLocalyOnly}</h3>
                                        {/* <p>{v.agency?.title}</p>
                                        <p>{v.agency?.showLocalyOnly}</p>
                                        <p>{v.agency?.authority}</p> */}
                                        <div set:html={marked(v.content)} /> 
                                        </div>
                                      )
                                    }
                                  )
                                : null}
                            </div>
                          )
                        })
                      : null}
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }


{
  page?.fields.slug === 'after-you-apply' ? (
  <div class="bg-secondary lt-border-t-light">
	<div class="container">
		<section class="section">
			<div class="row justify-content-md-center pt-3">
				<div class="col-12">
					<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="approved-tab" data-toggle="tab" data-target="#approved" type="button" role="tab" aria-controls="approved" aria-selected="true">{page?.fields.content2Title}</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="denied-tab" data-toggle="tab" data-target="#denied" type="button" role="tab" aria-controls="denied" aria-selected="false">{page?.fields.content3Title}</button>
  </li>
 
</ul>
<div class="tab-content" id="myTabContent">
  <div class="tab-pane fade show active" id="approved" role="tabpanel" aria-labelledby="approved-tab"><h2>{page?.fields.content2Title}</h2>
							<div
                class='js-accordion'
                set:html={marked(page.fields.content2 as string)}
              /></div>
  <div class="tab-pane fade" id="denied" role="tabpanel" aria-labelledby="denied-tab"><h2>{page?.fields.content3Title}</h2>
              <div
                class='js-accordion'
                set:html={marked(page.fields.content3 as string)}
              /></div>
 
</div>
					<hr>
						
					</div>
				</div>
			</section>
		</div>
	</div>
  ) : null
}


{/* {
  page?.fields.slug === 'after-you-apply' ? (
  <div class="bg-secondary lt-border-t-light">
	<div class="container">
		<section class="section">
			<div class="row justify-content-md-center pt-3">
				<div class="col-12">
					<nav>
						<div class="nav nav-tabs" id="nav-tab2" role="tablist">
							<a class="nav-item nav-link" id="nav-tab-0" data-toggle="tab" href="#nav-tab-0-content" role="tab" aria-controls="nav-tab-0-content">{page?.fields.content2Title}</a>
							<a class="nav-item nav-link" id="nav-tab-1" data-toggle="tab" href="#nav-tab-1-content" role="tab" aria-controls="nav-tab-1-content">{page?.fields.content3Title}</a>
						</div>
					</nav>
					<div class="tab-content" id="nav-tabContent2">
						<div class="tab-pane fade" id="nav-tab-0-content" role="tabpanel" aria-labelledby="nav-tab-0">
							<h2>{page?.fields.content2Title}</h2>
							<div
                class='js-accordion'
                set:html={marked(page.fields.content2 as string)}
              />
						</div>
						<div class="tab-pane fade active show" id="nav-tab-1-content" role="tabpanel" aria-labelledby="nav-tab-1">
							<h2>{page?.fields.content3Title}</h2>
              <div
                class='js-accordion'
                set:html={marked(page.fields.content3 as string)}
              />
						</div>
					</div>
					<hr>
						
					</div>
				</div>
			</section>
		</div>
	</div>
  ) : null
} */}

     {/* {
      page?.fields.slug === 'resources' ? (
        <div class='bg-white lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div class='js-accordion resources'>
                    {agency
                      ? agency.map((a, index) => {
                          return (
                            <>
                            TODO
                              <h2 id={`agency-${index}`}>{a.fields.title}</h2>
                              {a.fields?.resource
                                ? //@ts-ignore
                                  a.fields.resource.map(
                                    (
                                      a: TypeAgencyResourceSkeleton,
                                      index: number
                                    ) => {
                                      return (
                                        <div>
                                          {a?.fields?.title ? (
                                            <h3 id={`agency-resource-${index}`}>
                                              {a.fields.title}
                                            </h3>
                                          ) : null}
                                          {a?.fields?.content ? (
                                            <div
                                              set:html={marked(
                                                a.fields
                                                  .content as unknown as string
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      )
                                    }
                                  )
                                : null}
                            </>
                          )
                        })
                      : null}
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }  */}


{(page?.fields?.bodyTitle || 
   (page?.fields?.slug === 'introduction' && warning?.content) ||
   page?.fields?.content5Title || 
   (page?.fields.slug !== 'after-you-apply' && page?.fields?.content2) || 
   (page?.fields.slug !== 'after-you-apply' && page?.fields?.content3) || 
   page?.fields?.content4)  ? <div class='xbg-white  lt-border-t-light'>
      <div class='container'>
        <section class='section'>
          <div class='row justify-content-md-center'>
            <div class='col-12'>
              
              {page?.fields?.bodyTitle ? <h2>{page?.fields?.bodyTitle}</h2>: null}
              <div class='mb-3 pb-2'></div>
              {
               page?.fields?.slug === 'introduction' && warning?.content ? (
                  <div class='bg-light--alt p-3 my-3'>
                      {warning?.title ? (
                        <h3 class='h5'>{warning.title}</h3>
                      ) : null}
                      <div set:html={marked(warning.content as string)} />
                  </div>
                ) : null
              }
              {
                page?.fields?.content5Title ? (
                  <div class='bg-light--alt p-3 my-3'>
                    <h3 class='h5'>{page?.fields?.content5Title}</h3>
                    {page?.fields?.content5 ? (
                      <div
                        set:html={marked(page?.fields?.content5 as string)}
                      />
                    ) : null}
                  </div>
                ) : null
              }

              {
                ( page?.fields.slug !== 'after-you-apply') && page?.fields?.content2 ? (
                  <section>
                    <div class='js-accordion'>
                      <div
                        class=''
                        set:html={marked(page.fields.content2 as string)}
                      />
                    </div>{' '}
                  </section>
                ) : null
              }
              {
               ( page?.fields.slug !== 'after-you-apply') && page.fields.content3 ? (
                  <section>
                    {page.fields?.content3Title ? (
                      <h3>{page.fields?.content3Title}</h3>
                    ) : null}
                    <div
                      class='js-accordion'
                      set:html={marked(page.fields.content3 as string)}
                    />
                  </section>
                ) : null
              }

              {
                page.fields?.content4 ? (
                  <>
                    <hr />
                    <div class='bg-light--alt p-3 info'>
                      <div set:html={marked(page.fields.content4 as string)} />
                    </div>
                  </>
                ) : null
              }
            </div>
          </div>
        </section>
      </div>
    </div> : null}

     {/* <Resources class='lt-border-t-light' /> */}
    
     
     
    {/* {resources?.length  ? <div class='bg-secondary lt-border-t-light'>
      <div class='container'>
        <section class='section'>
          <div class='row justify-content-md-center'>
            <div class='col-12'>
              <h2>{t('resources')} RESOURCE BENEFIT PAGE</h2>
              <div class='mb-4 pb-2'></div>
              <div class='row'>
                {
                  resources
                    ? //@ts-ignore
                      resources?.map((o) => {
                        return (
                          <div
                            class='col-12 col-md-4'
                            data-province-filter=''
                            style='display: block;'
                          >
                            <div class='pro-card--full-img equal-height'>
                              <picture>
                                <img
                                  src={
                                    (o.fields.cardImage as Asset)?.fields?.file
                                      ?.url as string
                                  }
                                />
                              </picture>
                              <div class='content'>
                                <a
                                  href={`${makeUrl(base, locale, 'resource', o.fields.slug as string)}`}
                                >
                                    <p>{o.fields.title as string}</p>
                                    <p class='xsmall'>
                                      {o.fields.lead as string}
                                    </p>
                                    <span class='btn-link btn-icon-right bi bi-arrow-right'>
                                      <span />
                                    </span>
                                </a>
                              </div>
                            </div>
                          </div>
                        )
                      })
                    : null
                }
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>: null } */}

{/* {steps?.length  ? <p>{JSON.stringify(steps)}</p> : null}  */}

<div class="bg-secondary">
   <div class="container">
      <section class="section">
         <div class="row justify-content-md-center">
            <div class="col-12">
              {steps?.length  ? <h2>Steps</h2>
               <div class="mb-3 pb-3"></div>
               <ol class="">
                {steps?.map((s, index) => {
                   return (<li><a
                                  href={`${makeUrl(base, locale,    getJurisdiction(benefit.fields.authority, locale)?.slug,
                    benefit?.fields?.slug as string, applySlug, `step-${index + 1}`)}`}
                                >
                                  {s?.fields?.title}
                                </a></li>)
                  //  return (<li><a href={`how-to-apply/step-${index+1}`}>{s?.fields?.title}</a></li>)
                })
              }
               </ol>

               
               
               <div class="mb-3 pb-3"></div>
               <a class="js-step-start-button btn btn-tertiary btn-lg btn-icon-left bi bi-play-fill d-print-none"
                                  href={`${makeUrl(base, locale,    getJurisdiction(benefit.fields.authority, locale)?.slug,
                    benefit?.fields?.slug as string, applySlug, `step-1`)}`}
                                >
                                  Start&nbsp; <strong>step 1</strong>
                                </a>
              //  <a class="js-step-start-button btn btn-tertiary btn-lg btn-icon-left bi bi-play-fill d-print-none" href="how-to-apply/step-1">Start&nbsp; <strong>step 1</strong></a>
               : null}
             
               {/* <div class="flex center"><a class="btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left" href="/alberta/assured-income-for-the-severely-handicapped/eligibility">Eligibility </a><a class="btn btn-lg btn-icon-right bi bi-arrow-right btn-outline-secondary" href="/alberta/assured-income-for-the-severely-handicapped/after-you-apply">After you apply – approved or denied</a></div> */}
               <hr />
               <div class='flex center'>
                 {
                   navigationIndex === 0 ? (
                     <a
                       class='btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left'
                       href={`${makeUrl(
                         base,
                         locale,
                         getJurisdiction(benefit.fields.authority, locale)?.slug,
                         benefit?.fields?.slug as string
                       )}`}
                     >
                       {t('startBack')}
                     </a>
                   ) : (
                     <a
                       class='btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left'
                       href={`${makeUrl(
                         base,
                         locale,
                         getJurisdiction(benefit.fields.authority, locale)?.slug,
                         benefit?.fields?.slug as string,
                         prevPage?.fields?.slug as string
                       )}`}
                     >
                       {prevPage?.fields?.title}
                     </a>
                   )
                 }
                 {
                   nextPage?.fields?.slug ? (
                     <a
                       class='btn btn-lg btn-icon-right bi bi-arrow-right btn-primary'
                       href={`${makeUrl(
                         base,
                         locale,
                         getJurisdiction(benefit.fields.authority, locale)?.slug,
                         benefit?.fields?.slug as string,
                         nextPage?.fields?.slug as string
                       )}`}
                     >
                       {nextPage.fields.title}
                     </a>
                   ) : null
                 }
               </div>
              </div>
         </div>
      </section>
   </div>
</div> 




{
  (page?.fields.slug === 'after-you-apply' || page?.fields.slug === 'resources') ? (<div class="bg-light--alt">
	<OtherBenefits ctaOtherBenefits={ctaOtherBenefits} allBenefits={allBenefits} base={base} locale={locale}/>
</div>) : null}

{/* @ts-ignore */}
{resources?.length && (page?.fields.slug !== 'after-you-apply' && page?.fields.slug !== applySlug) ? <BenefitResources resources={resources} /> : null}

{/* {
  (page?.fields.slug === 'after-you-apply' || page?.fields.slug === 'resources') ? (<div class="bg-light--alt">
	<div class="container">
		<section class="section">
			<div class="row justify-content-md-center pt-3">
				<div class="col-12 cta key">
					<h2 class="mb-0">{ctaOtherBenefits?.fields?.title}</h2>
					<p>{ctaOtherBenefits?.fields?.content}</p>
					<div class="mb-3 pb-3"></div>

          {
                allBenefits
                  ? allBenefits.map((b) => {
                      return (
                        <p
                          class='medium'
                          data-province-filter={
                            getJurisdiction(b.fields.authority)?.code || ''
                          }
                          data-province-hide-filter={
                            b.fields.hideForProvinces || ''
                          }
                        >
                          <a
                            class='medium'
                            href={`${makeUrl(base, locale, getJurisdiction(b.fields.authority, locale)?.slug, b.fields?.slug as string)}`}
                          >
                             {b.fields.title}
                          </a>

                          
                        </p>
                      )
                    })
                  : null
              }
					
				</div>
			</div>
		</section>
	</div>
</div>) : null} */}


{
      page?.fields.slug === 'after-you-apply' && exploreSection?.title ? (
        <div class='XXXFIXTHEMEbg-white  bg-secondary'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12 cta explore'>
                  <h2>{exploreSection.title}</h2>
                  {exploreSection?.content ? (
                    <div
                      set:html={marked(
                        exploreSection.content as unknown as string
                      )}
                    />
                  ) : null}
                  <a
                    class='btn btn-primary  mt-4'
                    href={exploreSection?.url as unknown as string}
                  >
                    {exploreSection?.cta}
                  </a>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }
 <Feedback />
  </main>
</Layout>

<script>
  import accordion from '../lib/accordion'

  // accordion('.js-accordion.requirements h2', 'H2', 2)
  accordion('.js-accordion h2', 'H2', 2)
  accordion('.js-accordion h3', 'H3', 3)
  accordion('.js-accordion h4', 'H4', 4)
</script>
