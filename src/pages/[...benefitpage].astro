---
import { marked } from 'marked'
import { gfmHeadingId } from 'marked-gfm-heading-id'
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import Layout from '../layouts/Layout.astro'
import { contentfulClient } from '../lib/contentful'
import type { Entry } from 'contentful'
import type { TypeBenefitSkeleton } from '../types/contentful/TypeBenefit'
import getJurisdiction from '../lib/jurisdictions'
import type { TypeBenefitPageSkeleton } from '../types/contentful/TypeBenefitPage'
import makeUrl from '../lib/helpers'
import type { TypeAgencySkeleton } from '../types/contentful/TypeAgency'
import Feedback from '../components/Feedback.astro'
import type { TypeStepsSkeleton } from '../types/contentful/TypeSteps'
import type {
  TypeAgencyResourceSkeleton,
  TypeBenefitWarningSkeleton,
  TypeCtaSkeleton,
  TypeExploreMoreBenefitsCalloutFields,
  TypeExploreMoreBenefitsCalloutSkeleton,
  TypeResourcesSkeleton
} from '../types/contentful'
import OtherBenefits from '../components/OtherBenefits.astro'
import BenefitResources from '../components/BenefitResources.astro'
import { PriorityEventDispatcher } from '../lib/PriorityEventDispatcher'

export async function getStaticPaths() {
  let paths = []
  const LOCALES = ['en-CA', 'fr-CA']
  for (const locale of LOCALES) {
    const benefitRes = await contentfulClient.getEntries<TypeBenefitSkeleton>({
      content_type: 'benefit',
      include: 3,
      locale
    })

    const warningRes =
      await contentfulClient.getEntries<TypeBenefitWarningSkeleton>({
        skip: 0,
        limit: 1,
        content_type: 'benefitWarning',
        locale
      })
    let warning = warningRes.items[0]?.fields

    const benefits = benefitRes.items

    const ctaOtherBenefitsyId = 'vbcbiuCwY8oajVj8Q9x2P'
    const ctaOtherBenefits: Entry<TypeCtaSkeleton> =
      await contentfulClient.getEntry(ctaOtherBenefitsyId, {
        locale
      })

    const exploreRes =
      await contentfulClient.getEntries<TypeExploreMoreBenefitsCalloutSkeleton>(
        {
          skip: 0,
          limit: 1,
          content_type: 'exploreMoreBenefitsCallout',
          locale
        }
      )
    let exploreSection = exploreRes.items[0]?.fields

    for (const i of benefits) {
      // assigned resources that belong to agencies "Agency Resource"
      let groupedAgencyResources
      const jurisdiction = getJurisdiction(i.fields.authority, locale)

      const resolvedAgencyResource = i.fields?.agencyResource as
        | Entry<TypeAgencyResourceSkeleton>[]
        | undefined

      let agencyResource = resolvedAgencyResource
        // let agencyResource = i.fields?.agencyResource
        ?.filter(Boolean)
        .map((a) => {
          const agencyRecord = a?.fields?.agency as
            | Entry<TypeAgencySkeleton>
            | undefined
          const showLocalyOnly = agencyRecord?.fields?.showLocalyOnly
          const authority = agencyRecord?.fields?.authority
          const agency = agencyRecord?.fields?.title

          return {
            ...a?.fields,
            showLocalyOnly,
            authority,
            agency
          }
        })

      if (agencyResource) {
        groupedAgencyResources = Object.groupBy(agencyResource, (resource) => {
          const title = resource.agency
          return typeof title === 'string' && title.trim()
            ? title
            : 'Unknown Agency' // Ensure a valid key
        })
      }

      const jurisdictionSlug = jurisdiction?.slug
      let path = locale === 'en-CA' ? '' : `/fr`
      if (jurisdictionSlug) {
        path = path + '/' + jurisdictionSlug
      }
      path = path + '/' + i.fields.slug

      const benefitPages = i.fields.benefitPages as Array<
        Entry<TypeBenefitPageSkeleton>
      >
      const benefitSteps = i.fields.steps as Array<Entry<TypeStepsSkeleton>>
      let navigationIndex = 0

      let applySlug = benefitPages[2]?.fields.slug || 'how-to-apply'

      for (const b of benefitPages) {
        paths.push({
          params: {
            benefitpage: path + '/' + b.fields.slug
          },
          props: {
            page: { ...b },
            benefit: { ...i },
            steps:
              b.fields.slug === 'how-to-apply' || b.fields.slug === 'apply'
                ? benefitSteps
                : null,
            navigationIndex,
            ctaOtherBenefits,
            prevPage: benefitPages[navigationIndex - 1],
            nextPage: benefitPages[navigationIndex + 1],
            warning,
            groupedAgencyResources,
            allBenefits: benefits,
            exploreSection,
            applySlug
          }
        })
        navigationIndex = navigationIndex + 1
      }
    }
  }
  return paths
}

const options = {
  prefix: 'my-prefix-'
}

marked.use(gfmHeadingId(options))

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const locale = lang === 'fr' ? 'fr-CA' : 'en-CA'

const page = Astro.props.page as Entry<TypeBenefitPageSkeleton>
const benefit = Astro.props.benefit as Entry<TypeBenefitSkeleton>
const steps = Astro.props.steps as Array<Entry<TypeStepsSkeleton>> | null
const warning = Astro.props.warning
const resources = benefit.fields.resources as Array<
  Entry<TypeResourcesSkeleton>
>
const navigationIndex = Astro.props.navigationIndex
const prevPage = Astro.props.prevPage
const nextPage = Astro.props.nextPage
const groupedAgencyResources = Astro.props.groupedAgencyResources
const ctaOtherBenefits = Astro.props.ctaOtherBenefits
const allBenefits = Astro.props.allBenefits
const mainCTA = Astro.props.page.fields
  ?.mainCta as Entry<TypeCtaSkeleton> | null
const applySlug = Astro.props.applySlug

const exploreSection = Astro.props
  .exploreSection as TypeExploreMoreBenefitsCalloutFields

const base = import.meta.env.BASE_URL

const provinceDispatcher = new PriorityEventDispatcher()

// Subscribe handlers
provinceDispatcher.subscribe(() => {
  console.log('Page-specific handler executed')
}, 7)
---

<Layout
  title={page?.fields?.title as string}
  description={''}
  className='resource'
>
  <main
    class={`page_${page?.fields?.slug}`}
    id='maincontent'
    data-page-title={page?.fields?.title as string}
    data-page-category={page?.fields?.slug}
  >
    <div class='container'>
      <div class='row justify-content-md-center'>
        <div class='col-12 col-md-10'>
          <nav aria-label='breadcrumb'>
            <ol class='breadcrumb'>
              <li class='breadcrumb-item'>
                <a class='breadcrumb-item' href={`${makeUrl(base, locale)}`}>
                  {t('home')}
                </a>
              </li>
              <li class='breadcrumb-item'>
                <a
                  class='breadcrumb-item'
                  href={`${makeUrl(
                    base,
                    locale,
                    getJurisdiction(benefit.fields.authority, locale)?.slug,
                    benefit?.fields?.slug as string
                  )}`}
                  >{benefit?.fields?.title}
                </a>
              </li>
              <li class='active breadcrumb-item' aria-current='page'>
                {page?.fields?.title}
              </li>
            </ol>
          </nav>
        </div>
      </div>
    </div>
    <div class='container'>
      <section class='section'>
        <div class='row justify-content-md-center'>
          <div class='col-12 col-md-10'>
            {
              benefit.fields?.acronym ? (
                <div class='category h6 d-print-none'>
                  {benefit.fields.acronym}
                </div>
              ) : null
            }
            <h1><strong>{page.fields.title}</strong></h1>
            {
              page?.fields?.lead ? (
                <p>{page.fields.lead}</p>
              ) : page?.fields?.content1 ? (
                <div class='js-accordion reguirements'>
                  <div set:html={marked(page.fields.content1 as string)} />
                </div>
              ) : null
            }
            {
              mainCTA ? (
                <div class='callout callout--no-border p-3 my-4'>
                  <h2 class='h5'>{mainCTA.fields.title}</h2>
                  <div
                    class=''
                    set:html={marked(mainCTA.fields.content as string)}
                  />
                </div>
              ) : null
            }
            <!-- {
              page?.fields.slug === applySlug && page?.fields?.content2 ? (
                <>
                  <h2>{page.fields.content2Title}</h2>
                  <div
                    class=''
                    set:html={marked(page.fields.content2 as string)}
                  />
                </>
              ) : null
            } -->

            <!-- {
              page?.fields.slug === applySlug && page?.fields?.content3 ? (
                <>
                  <h2>{page.fields.content3Title}</h2>
                  <div
                    class=''
                    set:html={marked(page.fields.content3 as string)}
                  />
                </>
              ) : null
            } -->
          </div>
        </div>
      </section>
    </div>

    {
      page?.fields?.lead ? (
        <div class=' lt-border-t-light under heere'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div class='js-accordion'>
                    <div set:html={marked(page.fields.content1 as string)} />
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }

    {
      page?.fields.slug === 'resources' ? (
        <div class='agency resources lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  <div class='js-accordion resources'>
                    {groupedAgencyResources
                      ? Object.entries(groupedAgencyResources).map(
                          ([agencyTitle, resources], index) => {
                            return (
                              <div class='benefit-agency parent'>
                                <h2 id={`agencyv2-${index}`}>{agencyTitle}</h2>

                                {resources
                                  ? resources.map((v, index: number) => {
                                      return (
                                        <div
                                          class='benefitagencycomponent childresource'
                                          data-province-filter={
                                            v.showLocalyOnly
                                              ? getJurisdiction(v.authority)
                                                  ?.code || ''
                                              : ''
                                          }
                                        >
                                          <h3 id={`agencyv2-resource-${index}`}>
                                            {v.title}
                                          </h3>
                                          <div
                                            set:html={marked(
                                              v.content as string
                                            )}
                                          />
                                        </div>
                                      )
                                    })
                                  : null}
                              </div>
                            )
                          }
                        )
                      : null}
                  </div>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }

    <!-- bootstrap 5 -->

    {
      page?.fields.slug === 'after-you-apply' ? (
        <div class=' lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center pt-3'>
                <div class='col-12'>
                  <ul class='nav nav-tabs' id='myTab' role='tablist'>
                    <li class='nav-item' role='presentation'>
                      <button
                        class='nav-link active'
                        id='approved-tab'
                        data-bs-toggle='tab'
                        data-bs-target='#approved'
                        type='button'
                        role='tab'
                        aria-controls='approved'
                        aria-selected='true'
                      >
                        {page?.fields.content2Title}
                      </button>
                    </li>
                    <li class='nav-item' role='presentation'>
                      <button
                        class='nav-link'
                        id='denied-tab'
                        data-bs-toggle='tab'
                        data-bs-target='#denied'
                        type='button'
                        role='tab'
                        aria-controls='denied'
                        aria-selected='false'
                      >
                        {page?.fields.content3Title}
                      </button>
                    </li>
                  </ul>
                  <div class='tab-content' id='myTabContent'>
                    <div
                      class='tab-pane fade show active'
                      id='approved'
                      role='tabpanel'
                      aria-labelledby='approved-tab'
                    >
                      <h2>{page?.fields.content2Title}</h2>
                      <div
                        class='js-accordion'
                        set:html={marked(page.fields.content2 as string)}
                      />
                    </div>
                    <div
                      class='tab-pane fade'
                      id='denied'
                      role='tabpanel'
                      aria-labelledby='denied-tab'
                    >
                      <h2>{page?.fields.content3Title}</h2>
                      <div
                        class='js-accordion'
                        set:html={marked(page.fields.content3 as string)}
                      />
                    </div>
                  </div>
                  <hr />
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }
    <!-- bootstrap 4 -->
    <!-- {
      page?.fields.slug === 'after-you-apply' ? (
        <div class='bg-secondary lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center pt-3'>
                <div class='col-12'>
                  <ul class='nav nav-tabs' id='myTab' role='tablist'>
                    <li class='nav-item' role='presentation'>
                      <button
                        class='nav-link active'
                        id='approved-tab'
                        data-toggle='tab'
                        data-target='#approved'
                        type='button'
                        role='tab'
                        aria-controls='approved'
                        aria-selected='true'
                      >
                        {page?.fields.content2Title}
                      </button>
                    </li>
                    <li class='nav-item' role='presentation'>
                      <button
                        class='nav-link'
                        id='denied-tab'
                        data-toggle='tab'
                        data-target='#denied'
                        type='button'
                        role='tab'
                        aria-controls='denied'
                        aria-selected='false'
                      >
                        {page?.fields.content3Title}
                      </button>
                    </li>
                  </ul>
                  <div class='tab-content' id='myTabContent'>
                    <div
                      class='tab-pane fade show active'
                      id='approved'
                      role='tabpanel'
                      aria-labelledby='approved-tab'
                    >
                      <h2>{page?.fields.content2Title}</h2>
                      <div
                        class='js-accordion'
                        set:html={marked(page.fields.content2 as string)}
                      />
                    </div>
                    <div
                      class='tab-pane fade'
                      id='denied'
                      role='tabpanel'
                      aria-labelledby='denied-tab'
                    >
                      <h2>{page?.fields.content3Title}</h2>
                      <div
                        class='js-accordion'
                        set:html={marked(page.fields.content3 as string)}
                      />
                    </div>
                  </div>
                  <hr />
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    } -->

    {
      page?.fields?.bodyTitle ||
      (page?.fields?.slug === 'introduction' && warning?.content) ||
      page?.fields?.content5Title ||
      (page?.fields.slug !== 'after-you-apply' && page?.fields?.content2) ||
      (page?.fields.slug !== 'after-you-apply' && page?.fields?.content3) ||
      page?.fields?.content4 ? (
        <div class='lt-border-t-light'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12'>
                  {page?.fields?.bodyTitle ? (
                    <h2>{page?.fields?.bodyTitle}</h2>
                  ) : null}
                  <div class='mb-3 pb-2' />
                  {page?.fields?.slug === 'introduction' && warning?.content ? (
                    <div class='bg-light--alt p-3 my-3'>
                      {warning?.title ? (
                        <h3 class='h5'>{warning.title}</h3>
                      ) : null}
                      <div set:html={marked(warning.content as string)} />
                    </div>
                  ) : null}
                  {page?.fields?.content5Title ? (
                    <div class='bg-light--alt p-3 my-3'>
                      <h3 class='h5'>{page?.fields?.content5Title}</h3>
                      {page?.fields?.content5 ? (
                        <div
                          set:html={marked(page?.fields?.content5 as string)}
                        />
                      ) : null}
                    </div>
                  ) : null}

                  {page?.fields.slug !== 'after-you-apply' &&
                  page?.fields?.content2 ? (
                    <section>
                      <div class='js-accordion'>
                        <div
                          class=''
                          set:html={marked(page.fields.content2 as string)}
                        />
                      </div>{' '}
                    </section>
                  ) : null}
                  {page?.fields.slug !== 'after-you-apply' &&
                  page.fields.content3 ? (
                    <section>
                      {page.fields?.content3Title ? (
                        <h3>{page.fields?.content3Title}</h3>
                      ) : null}
                      <div
                        class='js-accordion'
                        set:html={marked(page.fields.content3 as string)}
                      />
                    </section>
                  ) : null}

                  {page.fields?.content4 ? (
                    <>
                      <hr />
                      <div class='bg-light--alt p-3 info'>
                        <div
                          set:html={marked(page.fields.content4 as string)}
                        />
                      </div>
                    </>
                  ) : null}
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }

    <div class='bg-secondary'>
      <div class='container'>
        <section class='xsection py-4'>
          <div class='row justify-content-md-center'>
            <div class='col-12'>
              {
                steps?.length ? (
                  <>
                    <h2>{t('steps')}</h2>
                    <div class='mb-3 pb-3' />
                    <ol class=''>
                      {steps?.map((s, index) => {
                        return (
                          <li>
                            <a
                              href={`${makeUrl(
                                base,
                                locale,
                                getJurisdiction(
                                  benefit.fields.authority,
                                  locale
                                )?.slug,
                                benefit?.fields?.slug as string,
                                applySlug,
                                `step-${index + 1}`
                              )}`}
                            >
                              {s?.fields?.title}
                            </a>
                          </li>
                        )
                      })}
                    </ol>
                    <div class='mb-3 pb-3' />
                    <a
                      class='js-step-start-button btn btn-tertiary btn-lg btn-icon-left bi bi-play-fill d-print-none'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string,
                        applySlug,
                        `step-1`
                      )}`}
                    >
                      Start&nbsp; <strong>step 1</strong>
                    </a>
                  </>
                ) : null
              }

              <!-- <hr />
              <div class='flex center'>
                {
                  navigationIndex === 0 ? (
                    <a
                      class='btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string
                      )}`}
                    >
                      {t('startBack')} X
                    </a>
                  ) : (
                    <a
                      class='btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string,
                        prevPage?.fields?.slug as string
                      )}`}
                    >
                      {prevPage?.fields?.title} Y
                    </a>
                  )
                }
                {
                  nextPage?.fields?.slug ? (
                    <a
                      class='btn btn-lg btn-icon-right bi bi-arrow-right btn-primary'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string,
                        nextPage?.fields?.slug as string
                      )}`}
                    >
                      {nextPage.fields.title} Z
                    </a>
                  ) : null
                }
              </div> -->
            </div>
          </div>
        </section>
      </div>
    </div>
    <div class='bg-secondary'>
      <div class='container'>
        <section class='xxsection pb-4'>
          <div class='row justify-content-md-center'>
            <div class='col-12'>
              <!-- {
                steps?.length ? (
                  <>
                    <h2>{t('steps')}</h2>
                    <div class='mb-3 pb-3' />
                    <ol class=''>
                      {steps?.map((s, index) => {
                        return (
                          <li>
                            <a
                              href={`${makeUrl(
                                base,
                                locale,
                                getJurisdiction(
                                  benefit.fields.authority,
                                  locale
                                )?.slug,
                                benefit?.fields?.slug as string,
                                applySlug,
                                `step-${index + 1}`
                              )}`}
                            >
                              {s?.fields?.title}
                            </a>
                          </li>
                        )
                      })}
                    </ol>
                    <div class='mb-3 pb-3' />
                    <a
                      class='js-step-start-button btn btn-tertiary btn-lg btn-icon-left bi bi-play-fill d-print-none'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string,
                        applySlug,
                        `step-1`
                      )}`}
                    >
                      Start&nbsp; <strong>step 1</strong>
                    </a>
                  </>
                ) : null
              }

              <hr /> -->
              <div class='flex center'>
                {
                  navigationIndex === 0 ? (
                    <a
                      class='btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string
                      )}`}
                    >
                      {t('startBack')}
                    </a>
                  ) : (
                    <a
                      class='btn btn-outline-secondary btn-lg btn-icon-left bi bi-arrow-left'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string,
                        prevPage?.fields?.slug as string
                      )}`}
                    >
                      {prevPage?.fields?.title}
                    </a>
                  )
                }
                {
                  nextPage?.fields?.slug ? (
                    <a
                      class='btn btn-lg btn-icon-right bi bi-arrow-right btn-primary'
                      href={`${makeUrl(
                        base,
                        locale,
                        getJurisdiction(benefit.fields.authority, locale)?.slug,
                        benefit?.fields?.slug as string,
                        nextPage?.fields?.slug as string
                      )}`}
                    >
                      {nextPage.fields.title}
                    </a>
                  ) : null
                }
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>

    {
      page?.fields.slug === 'after-you-apply' ||
      page?.fields.slug === 'resources' ? (
        <div class='bg-light--alt'>
          <OtherBenefits
            ctaOtherBenefits={ctaOtherBenefits}
            allBenefits={allBenefits?.filter(
              (b) => b.sys.id !== benefit.sys.id
            )}
            base={base}
            locale={locale}
          />
        </div>
      ) : null
    }

    {
      resources?.length &&
      page?.fields.slug !== 'after-you-apply' &&
      page?.fields.slug !== applySlug ? (
        <BenefitResources resources={resources} />
      ) : null
    }

    {
      page?.fields.slug === 'after-you-apply' && exploreSection?.title ? (
        <div class='bg-secondary'>
          <div class='container'>
            <section class='section'>
              <div class='row justify-content-md-center'>
                <div class='col-12 cta explore'>
                  <h2>{exploreSection.title}</h2>
                  {exploreSection?.content ? (
                    <div
                      set:html={marked(
                        exploreSection.content as unknown as string
                      )}
                    />
                  ) : null}
                  <a
                    class='btn btn-primary  mt-4'
                    href={exploreSection?.url as unknown as string}
                  >
                    {exploreSection?.cta}
                  </a>
                </div>
              </div>
            </section>
          </div>
        </div>
      ) : null
    }
    <Feedback />
  </main>
</Layout>

<!-- <script>
  import { provinceSelectionDispatcher } from '../lib/PriorityEventDispatcher'

  // Register a handler in the page
  provinceSelectionDispatcher.subscribe(() => {
    console.log('Page handler executed')
  }, 5)

  // Simulate an event dispatch
  // setTimeout(() => {
  //   provinceSelectionDispatcher.dispatch('Ontario')
  // }, 3000)
</script> -->

<script>
  // import { addPostHandlerListener } from '../lib/provinceChangeHandler.js'
  // import showProvincialDataOnly from '../lib/filterContent'
  import accordion from '../lib/accordion'
  import { provinceSelectionDispatcher } from '../lib/PriorityEventDispatcher'
  accordion('.js-accordion h2', 'H2', 2)
  accordion('.js-accordion h3', 'H3', 3)
  accordion('.js-accordion h4', 'H4', 4)

  function updateBenefitAgenciesVisibility() {
    // console.log('CALLED')
    document.querySelectorAll('.benefit-agency.parent').forEach((parent) => {
      // Check if the parent has at least one child with the desired criteria
      const hasMatchingChild = Array.from(
        parent.querySelectorAll('.benefitagencycomponent.childresource')
      ).some((child) => {
        return (child as HTMLElement).style.display !== 'none'
      })

      // Hide or show the parent based on visibility of children
      if (!hasMatchingChild) {
        ;(parent as HTMLElement).style.display = 'none' // Hide the parent
      } else {
        ;(parent as HTMLElement).style.display = 'block' // Show the parent
      }
    })
  }
  // updateBenefitAgenciesVisibility()
  //TODO add to hook to react to province selection change
  //need to be called after non-relevant elements are hidden
  // setTimeout(() => {
  //   document.querySelectorAll('.benefit-agency.parent').forEach((parent) => {
  //     // Check if the parent has at least one child with the desired criteria
  //     const hasMatchingChild = Array.from(
  //       parent.querySelectorAll('.benefitagencycomponent.childresource')
  //     ).some((child) => {
  //       return (child as HTMLElement).style.display !== 'none'
  //     })

  //     console.log('parent has at least one visible child: ', hasMatchingChild)

  //     // Hide the parent if no visible children
  //     if (!hasMatchingChild) {
  //       ;(parent as HTMLElement).style.display = 'none' // Hide the parent
  //     }
  //   })
  // }, 3000) // Delay of 3 seconds

  provinceSelectionDispatcher.subscribe(() => {
    // console.log('Page handler executed')
    updateBenefitAgenciesVisibility()
    // document.querySelectorAll('.benefit-agency.parent').forEach((parent) => {
    //   // Check if the parent has at least one child with the desired criteria
    //   const hasMatchingChild = Array.from(
    //     parent.querySelectorAll('.benefitagencycomponent.childresource')
    //   ).some((child) => {
    //     return (child as HTMLElement).style.display !== 'none'
    //   })

    //   // console.log('parent has at least one visible child: ', hasMatchingChild)

    //   // Hide the parent if no visible children
    //   if (!hasMatchingChild) {
    //     // console.log('HIDE ', (parent as HTMLElement).innerText)
    //     ;(parent as HTMLElement).style.display = 'none' // Hide the parent
    //   } else {
    //     // console.log('SHOW ', (parent as HTMLElement).innerText)
    //     ;(parent as HTMLElement).style.display = 'block' // Hide the parent
    //   }
    // })
  }, 5)
  // addPostHandlerListener(() => {
  //   console.log('I want the pages non standatrd content to be filtered now too')

  //   // setTimeout(() => {
  //   document.querySelectorAll('.benefit-agency.parent').forEach((parent) => {
  //     // Check if the parent has at least one child with the desired criteria
  //     const hasMatchingChild = Array.from(
  //       parent.querySelectorAll('.benefitagencycomponent.childresource')
  //     ).some((child) => {
  //       return (child as HTMLElement).style.display !== 'none'
  //     })

  //     // console.log('parent has at least one visible child: ', hasMatchingChild)

  //     // Hide the parent if no visible children
  //     if (!hasMatchingChild) {
  //       ;(parent as HTMLElement).style.display = 'none' // Hide the parent
  //     }
  //   })
  //   // }, 3000) // Delay of 3 seconds
  // })

  // document.querySelectorAll('.benefit-agency.parent').forEach((parent) => {
  //   // Check if any child is visible

  //   // Check if the parent has at least one child with the desired criteria
  //   const hasMatchingChild = Array.from(
  //     parent.querySelectorAll('.benefitagencycomponent.childresource')
  //   ).some((child) => {
  //     return (child as HTMLElement).style.display !== 'none'
  //   })

  //   console.log('parent has at leat one visibile child: ', hasMatchingChild)
  //   // // Hide the parent if no visible children
  //   if (!hasMatchingChild) {
  //     ;(parent as HTMLElement).style.display = 'none' // Hide the parent
  //   }
  // })
</script>
